/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetRandomResponse = components.ErrorT | number;

/** @internal */
export const GetRandomResponse$inboundSchema: z.ZodType<
  GetRandomResponse,
  z.ZodTypeDef,
  unknown
> = z.union([components.ErrorT$inboundSchema, z.number().int()]);

/** @internal */
export type GetRandomResponse$Outbound = components.ErrorT$Outbound | number;

/** @internal */
export const GetRandomResponse$outboundSchema: z.ZodType<
  GetRandomResponse$Outbound,
  z.ZodTypeDef,
  GetRandomResponse
> = z.union([components.ErrorT$outboundSchema, z.number().int()]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetRandomResponse$ {
  /** @deprecated use `GetRandomResponse$inboundSchema` instead. */
  export const inboundSchema = GetRandomResponse$inboundSchema;
  /** @deprecated use `GetRandomResponse$outboundSchema` instead. */
  export const outboundSchema = GetRandomResponse$outboundSchema;
  /** @deprecated use `GetRandomResponse$Outbound` instead. */
  export type Outbound = GetRandomResponse$Outbound;
}

export function getRandomResponseToJSON(
  getRandomResponse: GetRandomResponse,
): string {
  return JSON.stringify(
    GetRandomResponse$outboundSchema.parse(getRandomResponse),
  );
}

export function getRandomResponseFromJSON(
  jsonString: string,
): SafeParseResult<GetRandomResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetRandomResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetRandomResponse' from JSON`,
  );
}
